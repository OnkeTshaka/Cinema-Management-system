<div class="container">
    <div class="panel panel-body" style=" background:rgba(146, 163, 176, 0.23)">
        <div class="form-horizontal">
            @Html.AntiForgeryToken()
            <center>
                <h3>
                    <strong style="color: black">
                        <b>Manage User Roles </b>
                    </strong>
                </h3>
            </center>
            @Html.ActionLink("Create New Role", "Create") | @Html.ActionLink("Manage User Role", "ManageUserRoles")
            <hr />
            @{
                ViewBag.Title = "ManageUserRoles";
            }
            <h2>Role Add to User</h2>

            @using (Html.BeginForm("RoleAddToUser", "Role"))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <p>
                    @using (var db = new Firewalls.Models.ApplicationDbContext())
                    {

                        @Html.DropDownList("UserName", new SelectList(db.Users, "UserName", "UserName"), "Select UserName")
                    }

                    @using (var db = new Firewalls.Models.ApplicationDbContext())
                    {

                        @Html.DropDownList("RoleName", new SelectList(db.Roles, "Name", "Name"), "Select Role...")
                    }


                </p>
                <div style="background-color:darkslategrey;">
                    @ViewBag.feed
                </div>
                <input type="submit" value="Save" class="btn btn-default" />
            }
            <hr />
            <h3>Get Roles for a User</h3>
            @using (Html.BeginForm("GetRoles", "Role"))
            {
                @Html.AntiForgeryToken()
                <p>
                    @using (var db = new Firewalls.Models.ApplicationDbContext())
                    {

                        @Html.DropDownList("RoleForUser", new SelectList(db.Users, "UserName", "UserName"), "Select UserName")
                    }
                    <input type="submit" value="Get Roles for this User" class="btn btn-default" />
                </p>
            }

            @if (ViewBag.RolesForThisUser != null)
            {
                <div style="background-color:darkslategrey;">
                    <h3>Roles for @ViewBag.user </h3>
                    <ol>
                        @foreach (string s in ViewBag.RolesForThisUser)
                        {
                            <li>@s</li>
                        }
                    </ol>
                </div>
            }
            <div style="background-color:darkslategrey;">
                @ViewBag.message
            </div>
            <hr />
            <h3>Delete A User from a Role</h3>

            @using (Html.BeginForm("DeleteRoleForUser", "Role"))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <p>

                    @using (var db = new Firewalls.Models.ApplicationDbContext())
                    {

                        @Html.DropDownList("deletethis", new SelectList(db.Users, "UserName", "UserName"), "Select UserName")
                    }
                    @using (var db = new Firewalls.Models.ApplicationDbContext())
                    {

                        @Html.DropDownList("RoleName", new SelectList(db.Roles, "Name", "Name"), "Select Role...")
                    }

                </p>
                <div style="background-color:yellow;">
                    @ViewBag.ResultMessage
                </div>

                <input type="submit" value="Delete this user from Role" class="btn btn-default" />
            }
        </div>

    </div>
</div>